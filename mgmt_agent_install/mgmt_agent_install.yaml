---
- hosts: localhost
  collections:
    - oracle.oci
  tasks:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: ./mgmt_agent_scratch
        state: directory
        mode: '0755'

    - name: Create management_agent_install_key
      oci_management_agent_install_key:
        # required
        compartment_id: "{{compartment_ocid}}"
        display_name:  "{{mgmt_agent_install_key_name}}"
        # optional
        #allowed_key_install_count: 56
        #time_expires: time_expires_example
        is_unlimited: true
      register: key_result
    - debug: 
        msg="{{key_result.management_agent_install_key}}"
    - set_fact:
        management_agent_install_key: "{{key_result.management_agent_install_key.key}}"

    - name: Creating management agent input.rsp file
      copy:
        content: "######################################################################## \n
        # Please refer the following Management Agent Installation Guide for more details. \n
        # \n
        # https://docs.cloud.oracle.com/iaas/management-agents/index.html  \n
        #\n
        # Since this file has sensitive information, please make sure that after \n
        # executing setup.sh you either delete this file or store it in a secure \n
        # location. \n
        # \n
        ######################################################################## \n
        ManagementAgentInstallKey = {{management_agent_install_key}} \n
        AgentDisplayName = \n
        #Please uncomment the below tags properties and provide values as needed \n
        #FreeFormTags = [{\"<key1>\":\"<value1>\"}, {\"<key2>\":\"<value2>\"}]\n
        #DefinedTags = [{\"namespace1\":{\"<key1>\":\"<value1>\"}}, {\"namespace2\":{\"<key2>\":\"<value2>\"}}]\n
        ProxyHost = \n
        ProxyPort = \n
        ProxyUser = \n
        ProxyPassword = \n
        ProxyRealm = \n
        CredentialWalletPassword = \n
        #Service.plugin.appmgmt.download=true \n
        #Service.plugin.jms.download=true \n
        #Service.plugin.dbaas.download=true \n
        Service.plugin.logan.download=true
        #Service.plugin.opsiHost.download=true \n
        #Service.plugin.jm.download=true" 
        dest: ./mgmt_agent_scratch/input.rsp

    - name: Download the Management Agent RPM package and copy to scratch locally
      shell:
        "wget https://objectstorage.{{oci_region}}.oraclecloud.com/n/idtskf8cjzhp/b/installer/o/Linux-x86_64/latest/oracle.mgmt_agent.rpm"
      register: pkg_install_result
    
    - name: Copy the Management Agent Script locally to scratch
      copy:
        src: "{{ item }}"
        dest: ./mgmt_agent_scratch
      with_items:
        - oracle.mgmt_agent.rpm

    - name: Locally remove oracle.mgmt_agent.rpm
      file:
        path: oracle.mgmt_agent.rpm
        state: absent
   
- hosts: ocls_hosts 
  vars:
    # common vars
  tasks:
    - name: check java executable is present on remote host
      become: yes
      become_user: root
      command: 
        "which java"
      register: java_result
      tags: check-java-exists
    - debug: 
        msg="{{java_result.stdout_lines}}"
        verbosity=1

    - name: Checking Java version
      shell: "java -version 2>&1 | awk -F '\"' '/version/ {print $2}' | head -c3"
      register: java_version
    - debug: 
        msg="{{java_version.stdout_lines[0]}}"
        verbosity=1

    - name: Check if Java Version is greater than 1.8
      fail:
        msg: "Java version is less than 1.8, Exiting.."
      when: java_version.stdout_lines[0]|float < 1.8 
    
    - name: Transfer all mgmt agent files over to the hosts
      become: yes
      become_user: root
      copy:
        src: ./mgmt_agent_scratch
        dest: /tmp/
        owner: opc
        group: opc
        mode: '0644'

    - name: Install the mgmt agent rpm
      become: yes
      become_user: root
      yum:
        name: "{{mgmt_agent_sratch}}/oracle.mgmt_agent.rpm"
        state: present
      tags: install-agent

    - name: Setting up mgmt agent service
      become: yes
      become_user: opc
      shell: 
        "sudo /opt/oracle/mgmt_agent/agent_inst/bin/setup.sh opts={{mgmt_agent_sratch}}/input.rsp"
      tags: setup-agent
    
    - name: Start mgmt agent service
      ansible.builtin.service:
        name: mgmt_agent.service
        state: started
      tags: start-agent
    
    - name: Cleanup management agent scratch
      become: yes
      become_user: opc
      file:
        path: "{{mgmt_agent_sratch}}"
        state: absent

    - name: Set varlog folder permissions
      become: yes
      become_user: opc
      shell: 
        "sudo /usr/bin/setfacl -R -m u:mgmt_agent:rX /var/log"
    
    

    
    
      
    

    

      
