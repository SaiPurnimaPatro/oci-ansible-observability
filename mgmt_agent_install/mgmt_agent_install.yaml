# Copyright (c) 2021, 2022 Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.
# 
---
- hosts: localhost
  collections:
    - oracle.oci
  tasks:
    - name: Check pre-requisites
      fail:
        msg: "Environment variable {{item}} not set. Please declare an environment variable with an appropriate value for the sample to work."
      when: item not in ansible_env
      with_items:
        - "compartment_ocid"

    - name: Create a local scratch folder
      ansible.builtin.file:
        path: ./mgmt_agent_scratch
        state: directory
        mode: '0755'

    - name: Create management agent install key
      oci_management_agent_install_key:
        # required
        compartment_id: "{{compartment_ocid}}"
        display_name:  "{{mgmt_agent_install_key_name}}"
        # optional
        #allowed_key_install_count: 56
        #time_expires: time_expires_example
        is_unlimited: true
      register: key_result
    - debug: 
        msg="{{key_result.management_agent_install_key}}"
    - set_fact:
        management_agent_install_key: "{{key_result.management_agent_install_key.key}}"

    - name: Create management agent response file
      copy:
        content: "######################################################################## \n
        # Please refer the following Management Agent Installation Guide for more details. \n
        # \n
        # https://docs.cloud.oracle.com/iaas/management-agents/index.html  \n
        #\n
        # Since this file has sensitive information, please make sure that after \n
        # executing setup.sh you either delete this file or store it in a secure \n
        # location. \n
        # \n
        ######################################################################## \n
        ManagementAgentInstallKey = {{management_agent_install_key}} \n
        AgentDisplayName = \n
        #Please uncomment the below tags properties and provide values as needed \n
        #FreeFormTags = [{\"<key1>\":\"<value1>\"}, {\"<key2>\":\"<value2>\"}]\n
        #DefinedTags = [{\"namespace1\":{\"<key1>\":\"<value1>\"}}, {\"namespace2\":{\"<key2>\":\"<value2>\"}}]\n
        ProxyHost = \n
        ProxyPort = \n
        ProxyUser = \n
        ProxyPassword = \n
        ProxyRealm = \n
        CredentialWalletPassword = \n
        Service.plugin.appmgmt.download=true \n
        #Service.plugin.jms.download=true \n
        Service.plugin.dbaas.download=true \n
        Service.plugin.logan.download=true
        Service.plugin.opsiHost.download=true \n
        #Service.plugin.jm.download=true" 
        dest: ./mgmt_agent_scratch/input.rsp

    - name: List management agent images
      oci_management_agent_image_facts:
        compartment_id: "{{compartment_ocid}}"
        install_type: AGENT
      register: image_result
    - set_fact:
        object_url: "{{ item.object_url | split('/')}}"
        namespace: "{{[4]|map('extract', item.object_url.split('/')) | join()}}"
        bucket_name: "{{[6]|map('extract', item.object_url.split('/')) | join ()}}"
        object_name: "{{[8,9,10]|map('extract', item.object_url.split('/')) | join('/')}}"

      with_items: "{{image_result.management_agent_images}}"
      when:
        - item.platform_name == "Linux-x86_64"
        - item.package_type == "RPM"
    - debug:
        msg: "Extracted the agent image details as follows Namespace: {{namespace}} Bucket: {{bucket_name}} Object name: {{object_name}}"
  
    - name: Download Management Agent 
      oci_object_storage_object:
        # required
        namespace_name: "{{namespace}}"
        bucket_name: "{{bucket_name}}"
        object_name: "{{object_name}}"
        dest: ./mgmt_agent_scratch/oracle.mgmt_agent.rpm
      tags: download_agent
   
- hosts: agent_hosts 
  vars:
    # common vars
  tasks:
    - name: Check java program exists on remote host
      become: yes
      become_user: root
      command: 
        "which java"
      register: java_result
      tags: check_java_exists
    - debug: 
        msg="{{java_result.stdout_lines}}"
     

    - name: Check Java version
      shell: "java -version 2>&1 | awk -F '\"' '/version/ {print $2}' | head -c3"
      register: java_version
    - debug: 
        msg="{{java_version.stdout_lines[0]}}"
        

    - name: Check if Java Version is greater than 1.8
      fail:
        msg: "Java version is less than 1.8, Exiting.."
      when: java_version.stdout_lines[0]|float < 1.8 
    
    - name: Transfer all management agent files over to the hosts
      become: yes
      become_user: root
      copy:
        src: ./mgmt_agent_scratch
        dest: /tmp/
        owner: opc
        group: opc
        mode: '0644'

    - name: Install the management agent
      become: yes
      become_user: root
      shell: "rpm -ivh {{mgmt_agent_sratch}}/oracle.mgmt_agent.rpm"
      register: install_agent_result
      tags: install_agent
    - debug: 
        msg="{{install_agent_result}}"

    - name: Set up management agent service
      become: yes
      become_user: opc
      shell: 
        "sudo /opt/oracle/mgmt_agent/agent_inst/bin/setup.sh opts={{mgmt_agent_sratch}}/input.rsp"
      tags: setup_agent
      register: setup_agent_result
    - debug: 
        msg="{{setup_agent_result}}"
    
    - name: Start management agent service
      ansible.builtin.service:
        name: mgmt_agent.service
        state: started
      tags: start_agent
    
    - name: Cleanup management agent scratch
      become: yes
      become_user: opc
      file:
        path: "{{mgmt_agent_sratch}}"
        state: absent
      tags: cleanup_agent

    - name: Set varlog folder permissions
      become: yes
      become_user: opc
      shell: 
        "sudo /usr/bin/setfacl -R -m u:mgmt_agent:rX /var/log"
    
    

    
    
      
    

    

      
